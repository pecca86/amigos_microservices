services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: pekka
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped
  # The zipkin process services the UI, and also exposes a POST endpoint that
  # instrumentation can send trace data to. Scribe is disabled by default.
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    # Environment settings are defined here https://github.com/openzipkin/zipkin/blob/master/zipkin-server/README.md#environment-variables
    ports:
      # Port used for the Zipkin UI and HTTP Api
      - "9411:9411"
    networks:
      - spring
  rabbitmq:
    image: rabbitmq:3.9.11-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672" # Host container
      - "15672:15672" # Management
    networks:
      - spring
  # Docker container configs
# DISABLED, SINCE SERVICE DISCOVERY GOES THROUGH KUBERNETES
#  eureka-server:
#    image: pecca86/eureka-server:latest
#    container_name: eureka-server
#    ports:
#      - "8761:8761"
#    # specify which environment to use configs
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#    networks:
#      - spring
#    depends_on:
#      - zipkin
#  apigateway:
#    image: pecca86/apigateway:latest
#    container_name: apigateway
#    ports:
#      - "8083:8083"
#    # specify which environment to use configs
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#    networks:
#      - spring
#    depends_on:
#      - zipkin
#      - eureka-server
  customer:
    image: pecca86/customer:latest
    container_name: customer
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
    depends_on:
      - zipkin
      #- eureka-server
      - postgres
      - rabbitmq
  fraud:
    image: pecca86/fraud:latest
    container_name: fraud
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
    depends_on:
      - zipkin
      #- eureka-server
      - postgres
      - rabbitmq
  notification:
    image: pecca86/notification:latest
    container_name: notification
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
    depends_on:
      - zipkin
      #- eureka-server
      - postgres
      - rabbitmq
networks:
  postgres:
    driver: bridge
  # Docker network
  spring:
    driver: bridge

volumes:
  postgres:
  pgadmin: